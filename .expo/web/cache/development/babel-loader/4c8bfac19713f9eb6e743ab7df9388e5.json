{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\development\\\\FindFood\\\\node_modules\\\\react-native-elements\\\\src\\\\text\\\\Text.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { fonts, withTheme } from \"../config\";\nimport normalize from \"../helpers/normalizeText\";\n\nvar TextElement = function TextElement(props) {\n  var style = props.style,\n      children = props.children,\n      h1 = props.h1,\n      h2 = props.h2,\n      h3 = props.h3,\n      h4 = props.h4,\n      h1Style = props.h1Style,\n      h2Style = props.h2Style,\n      h3Style = props.h3Style,\n      h4Style = props.h4Style,\n      rest = _objectWithoutProperties(props, [\"style\", \"children\", \"h1\", \"h2\", \"h3\", \"h4\", \"h1Style\", \"h2Style\", \"h3Style\", \"h4Style\"]);\n\n  return React.createElement(Text, _extends({\n    style: StyleSheet.flatten([styles.text, style && style, h1 && StyleSheet.flatten([{\n      fontSize: normalize(40)\n    }, h1Style]), h2 && StyleSheet.flatten([{\n      fontSize: normalize(34)\n    }, h2Style]), h3 && StyleSheet.flatten([{\n      fontSize: normalize(28)\n    }, h3Style]), h4 && StyleSheet.flatten([{\n      fontSize: normalize(22)\n    }, h4Style]), h1 && styles.bold, h2 && styles.bold, h3 && styles.bold, h4 && styles.bold])\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    }\n  }), children);\n};\n\nTextElement.propTypes = {\n  style: Text.propTypes.style,\n  h1: PropTypes.bool,\n  h2: PropTypes.bool,\n  h3: PropTypes.bool,\n  h4: PropTypes.bool,\n  h1Style: Text.propTypes.style,\n  h2Style: Text.propTypes.style,\n  h3Style: Text.propTypes.style,\n  h4Style: Text.propTypes.style,\n  children: PropTypes.node\n};\nTextElement.defaultProps = {\n  h1: false,\n  h2: false,\n  h3: false,\n  h4: false,\n  style: {},\n  h1Style: {},\n  h2Style: {},\n  h3Style: {},\n  h4Style: {},\n  children: ''\n};\nvar styles = StyleSheet.create({\n  text: _objectSpread({}, Platform.select({\n    android: _objectSpread({}, fonts.android.regular)\n  })),\n  bold: _objectSpread({}, Platform.select({\n    android: _objectSpread({}, fonts.android.bold)\n  }))\n});\nexport { TextElement };\nexport default withTheme(TextElement, 'Text');","map":{"version":3,"sources":["C:/development/FindFood/node_modules/react-native-elements/src/text/Text.js"],"names":["React","PropTypes","fonts","withTheme","normalize","TextElement","props","style","children","h1","h2","h3","h4","h1Style","h2Style","h3Style","h4Style","rest","StyleSheet","flatten","styles","text","fontSize","bold","propTypes","Text","bool","node","defaultProps","create","Platform","select","android","regular"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, StyleSheet, Platform } from 'react-native';\n\nimport { fonts, withTheme } from '../config';\nimport normalize from '../helpers/normalizeText';\n\nconst TextElement = props => {\n  const {\n    style,\n    children,\n    h1,\n    h2,\n    h3,\n    h4,\n    h1Style,\n    h2Style,\n    h3Style,\n    h4Style,\n    ...rest\n  } = props;\n\n  return (\n    <Text\n      style={StyleSheet.flatten([\n        styles.text,\n        style && style,\n        h1 && StyleSheet.flatten([{ fontSize: normalize(40) }, h1Style]),\n        h2 && StyleSheet.flatten([{ fontSize: normalize(34) }, h2Style]),\n        h3 && StyleSheet.flatten([{ fontSize: normalize(28) }, h3Style]),\n        h4 && StyleSheet.flatten([{ fontSize: normalize(22) }, h4Style]),\n        h1 && styles.bold,\n        h2 && styles.bold,\n        h3 && styles.bold,\n        h4 && styles.bold,\n      ])}\n      {...rest}\n    >\n      {children}\n    </Text>\n  );\n};\n\nTextElement.propTypes = {\n  style: Text.propTypes.style,\n  h1: PropTypes.bool,\n  h2: PropTypes.bool,\n  h3: PropTypes.bool,\n  h4: PropTypes.bool,\n  h1Style: Text.propTypes.style,\n  h2Style: Text.propTypes.style,\n  h3Style: Text.propTypes.style,\n  h4Style: Text.propTypes.style,\n  children: PropTypes.node,\n};\n\nTextElement.defaultProps = {\n  h1: false,\n  h2: false,\n  h3: false,\n  h4: false,\n  style: {},\n  h1Style: {},\n  h2Style: {},\n  h3Style: {},\n  h4Style: {},\n  children: '',\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    ...Platform.select({\n      android: {\n        ...fonts.android.regular,\n      },\n    }),\n  },\n  bold: {\n    ...Platform.select({\n      android: {\n        ...fonts.android.bold,\n      },\n    }),\n  },\n});\n\nexport { TextElement };\nexport default withTheme(TextElement, 'Text');\n"]},"metadata":{},"sourceType":"module"}