{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\development\\\\FindFood\\\\node_modules\\\\react-native-elements\\\\src\\\\image\\\\Image.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport RNImage from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { nodeType } from \"../helpers\";\nimport { ViewPropTypes, withTheme } from \"../config\";\n\nvar Image = function (_React$PureComponent) {\n  _inherits(Image, _React$PureComponent);\n\n  function Image() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Image);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Image)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.placeholderContainerOpacity = new Animated.Value(1);\n\n    _this.onLoadEnd = function () {\n      var minimumWait = 100;\n      var staggerNonce = 200 * Math.random();\n      setTimeout(function () {\n        return Animated.timing(_this.placeholderContainerOpacity, {\n          toValue: 0,\n          duration: 350,\n          useNativeDriver: true\n        }).start();\n      }, minimumWait + staggerNonce);\n    };\n\n    return _this;\n  }\n\n  _createClass(Image, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          placeholderStyle = _this$props.placeholderStyle,\n          PlaceholderContent = _this$props.PlaceholderContent,\n          containerStyle = _this$props.containerStyle,\n          style = _this$props.style,\n          ImageComponent = _this$props.ImageComponent,\n          attributes = _objectWithoutProperties(_this$props, [\"placeholderStyle\", \"PlaceholderContent\", \"containerStyle\", \"style\", \"ImageComponent\"]);\n\n      return React.createElement(View, {\n        style: StyleSheet.flatten([styles.container, containerStyle]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        }\n      }, Platform.select({\n        android: React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          }\n        }, React.createElement(View, {\n          style: styles.placeholderContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          }\n        }, React.createElement(Animated.View, {\n          testID: \"RNE__Image__placeholder\",\n          style: StyleSheet.flatten([style, styles.placeholder, {\n            backgroundColor: this.placeholderContainerOpacity.interpolate({\n              inputRange: [0, 1],\n              outputRange: [styles.placeholder.backgroundColor, 'transparent']\n            })\n          }, placeholderStyle]),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          }\n        }, PlaceholderContent)), React.createElement(ImageComponent, _extends({}, attributes, {\n          style: style,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          }\n        }))),\n        default: React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          }\n        }, React.createElement(ImageComponent, _extends({}, attributes, {\n          onLoadEnd: this.onLoadEnd,\n          style: style,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          }\n        })), React.createElement(Animated.View, {\n          style: StyleSheet.flatten([styles.placeholderContainer, {\n            opacity: this.placeholderContainerOpacity\n          }]),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          }\n        }, React.createElement(View, {\n          testID: \"RNE__Image__placeholder\",\n          style: StyleSheet.flatten([style, styles.placeholder, placeholderStyle]),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          }\n        }, PlaceholderContent)))\n      }));\n    }\n  }]);\n\n  return Image;\n}(React.PureComponent);\n\nvar styles = {\n  container: {\n    backgroundColor: 'transparent',\n    position: 'relative'\n  },\n  placeholderContainer: _objectSpread({}, StyleSheet.absoluteFillObject),\n  placeholder: {\n    backgroundColor: '#bdbdbd',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n};\nImage.propTypes = _objectSpread({}, RNImage.propTypes, {\n  ImageComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  PlaceholderContent: nodeType,\n  containerStyle: ViewPropTypes.style,\n  placeholderStyle: RNImage.propTypes.style\n});\nImage.defaultProps = {\n  ImageComponent: RNImage\n};\nexport { Image };\nexport default withTheme(Image, 'Image');","map":{"version":3,"sources":["C:/development/FindFood/node_modules/react-native-elements/src/image/Image.js"],"names":["React","PropTypes","nodeType","ViewPropTypes","withTheme","Image","placeholderContainerOpacity","Animated","Value","onLoadEnd","minimumWait","staggerNonce","Math","random","setTimeout","timing","toValue","duration","useNativeDriver","start","props","placeholderStyle","PlaceholderContent","containerStyle","style","ImageComponent","attributes","StyleSheet","flatten","styles","container","Platform","select","android","placeholderContainer","placeholder","backgroundColor","interpolate","inputRange","outputRange","default","opacity","PureComponent","position","absoluteFillObject","alignItems","justifyContent","propTypes","RNImage","oneOfType","func","object","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Animated,\n  Image as RNImage,\n  Platform,\n  StyleSheet,\n  View,\n} from 'react-native';\n\nimport { nodeType } from '../helpers';\nimport { ViewPropTypes, withTheme } from '../config';\n\nclass Image extends React.PureComponent {\n  placeholderContainerOpacity = new Animated.Value(1);\n\n  onLoadEnd = () => {\n    /* Images finish loading in the same frame for some reason,\n        the images will fade in separately with staggerNonce */\n    const minimumWait = 100;\n    const staggerNonce = 200 * Math.random();\n\n    setTimeout(\n      () =>\n        Animated.timing(this.placeholderContainerOpacity, {\n          toValue: 0,\n          duration: 350,\n          useNativeDriver: true,\n        }).start(),\n      minimumWait + staggerNonce\n    );\n  };\n\n  render() {\n    const {\n      placeholderStyle,\n      PlaceholderContent,\n      containerStyle,\n      style,\n      ImageComponent,\n      ...attributes\n    } = this.props;\n\n    return (\n      <View style={StyleSheet.flatten([styles.container, containerStyle])}>\n        {Platform.select({\n          android: (\n            <React.Fragment>\n              <View style={styles.placeholderContainer}>\n                <Animated.View\n                  testID=\"RNE__Image__placeholder\"\n                  style={StyleSheet.flatten([\n                    style,\n                    styles.placeholder,\n                    {\n                      backgroundColor: this.placeholderContainerOpacity.interpolate(\n                        {\n                          inputRange: [0, 1],\n                          outputRange: [\n                            styles.placeholder.backgroundColor,\n                            'transparent',\n                          ],\n                        }\n                      ),\n                    },\n                    placeholderStyle,\n                  ])}\n                >\n                  {PlaceholderContent}\n                </Animated.View>\n              </View>\n\n              <ImageComponent {...attributes} style={style} />\n            </React.Fragment>\n          ),\n          default: (\n            <React.Fragment>\n              <ImageComponent\n                {...attributes}\n                onLoadEnd={this.onLoadEnd}\n                style={style}\n              />\n\n              <Animated.View\n                style={StyleSheet.flatten([\n                  styles.placeholderContainer,\n                  { opacity: this.placeholderContainerOpacity },\n                ])}\n              >\n                <View\n                  testID=\"RNE__Image__placeholder\"\n                  style={StyleSheet.flatten([\n                    style,\n                    styles.placeholder,\n                    placeholderStyle,\n                  ])}\n                >\n                  {PlaceholderContent}\n                </View>\n              </Animated.View>\n            </React.Fragment>\n          ),\n        })}\n      </View>\n    );\n  }\n}\n\nconst styles = {\n  container: {\n    backgroundColor: 'transparent',\n    position: 'relative',\n  },\n  placeholderContainer: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  placeholder: {\n    backgroundColor: '#bdbdbd',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n};\n\nImage.propTypes = {\n  ...RNImage.propTypes,\n  ImageComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  PlaceholderContent: nodeType,\n  containerStyle: ViewPropTypes.style,\n  placeholderStyle: RNImage.propTypes.style,\n};\n\nImage.defaultProps = {\n  ImageComponent: RNImage,\n};\n\nexport { Image };\nexport default withTheme(Image, 'Image');\n"]},"metadata":{},"sourceType":"module"}