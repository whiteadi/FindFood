{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\development\\\\FindFood\\\\node_modules\\\\react-native-elements\\\\src\\\\config\\\\withTheme.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport deepmerge from 'deepmerge';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { ThemeConsumer } from \"./ThemeProvider\";\nimport DefaultTheme from \"./theme\";\n\nvar isClassComponent = function isClassComponent(Component) {\n  return Boolean(Component.prototype && Component.prototype.isReactComponent);\n};\n\nvar withTheme = function withTheme(WrappedComponent, themeKey) {\n  var ThemedComponent = function (_React$Component) {\n    _inherits(ThemedComponent, _React$Component);\n\n    function ThemedComponent() {\n      _classCallCheck(this, ThemedComponent);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(ThemedComponent).apply(this, arguments));\n    }\n\n    _createClass(ThemedComponent, [{\n      key: \"render\",\n      value: function render() {\n        var _this$props = this.props,\n            forwardedRef = _this$props.forwardedRef,\n            children = _this$props.children,\n            rest = _objectWithoutProperties(_this$props, [\"forwardedRef\", \"children\"]);\n\n        return React.createElement(ThemeConsumer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          }\n        }, function (context) {\n          if (!context) {\n            var _props = _objectSpread({}, rest, {\n              theme: DefaultTheme,\n              children: children\n            });\n\n            return isClassComponent(WrappedComponent) ? React.createElement(WrappedComponent, _extends({\n              ref: forwardedRef\n            }, _props, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 25\n              }\n            })) : React.createElement(WrappedComponent, _extends({}, _props, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 27\n              }\n            }));\n          }\n\n          var theme = context.theme,\n              updateTheme = context.updateTheme;\n\n          var props = _objectSpread({\n            theme: theme,\n            updateTheme: updateTheme\n          }, deepmerge(themeKey && theme[themeKey] || {}, rest), {\n            children: children\n          });\n\n          if (isClassComponent(WrappedComponent)) {\n            return React.createElement(WrappedComponent, _extends({\n              ref: forwardedRef\n            }, props, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 40\n              }\n            }));\n          }\n\n          return React.createElement(WrappedComponent, _extends({}, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            }\n          }));\n        });\n      }\n    }]);\n\n    return ThemedComponent;\n  }(React.Component);\n\n  var name = themeKey ? \"Themed.\" + themeKey : \"Themed.\" + (WrappedComponent.displayName || WrappedComponent.name || 'Component');\n\n  if (isClassComponent(WrappedComponent)) {\n    var forwardRef = function forwardRef(props, ref) {\n      return React.createElement(ThemedComponent, _extends({}, props, {\n        forwardedRef: ref,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        }\n      }));\n    };\n\n    forwardRef.displayName = name;\n    return hoistNonReactStatics(React.forwardRef(forwardRef), WrappedComponent);\n  }\n\n  ThemedComponent.displayName = name;\n  return ThemedComponent;\n};\n\nexport default withTheme;","map":{"version":3,"sources":["C:/development/FindFood/node_modules/react-native-elements/src/config/withTheme.js"],"names":["React","deepmerge","hoistNonReactStatics","ThemeConsumer","DefaultTheme","isClassComponent","Component","Boolean","prototype","isReactComponent","withTheme","WrappedComponent","themeKey","ThemedComponent","props","forwardedRef","children","rest","context","theme","updateTheme","name","displayName","forwardRef","ref"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,oBAAP,MAAiC,yBAAjC;AAEA,SAASC,aAAT;AACA,OAAOC,YAAP;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,SAAS;AAAA,SAChCC,OAAO,CAACD,SAAS,CAACE,SAAV,IAAuBF,SAAS,CAACE,SAAV,CAAoBC,gBAA5C,CADyB;AAAA,CAAlC;;AAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,gBAAD,EAAmBC,QAAnB,EAAgC;AAAA,MAC1CC,eAD0C;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,+BAErC;AAAA,0BAEqC,KAAKC,KAF1C;AAAA,YAECC,YAFD,eAECA,YAFD;AAAA,YAEeC,QAFf,eAEeA,QAFf;AAAA,YAE4BC,IAF5B;;AAIP,eACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,UAAAC,OAAO,EAAI;AAEV,cAAI,CAACA,OAAL,EAAc;AACZ,gBAAMJ,MAAK,qBAAQG,IAAR;AAAcE,cAAAA,KAAK,EAAEf,YAArB;AAAmCY,cAAAA,QAAQ,EAARA;AAAnC,cAAX;;AAEA,mBAAOX,gBAAgB,CAACM,gBAAD,CAAhB,GACL,oBAAC,gBAAD;AAAkB,cAAA,GAAG,EAAEI;AAAvB,eAAyCD,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,eADK,GAGL,oBAAC,gBAAD,eAAsBA,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF;AAKD;;AAVS,cAYFK,KAZE,GAYqBD,OAZrB,CAYFC,KAZE;AAAA,cAYKC,WAZL,GAYqBF,OAZrB,CAYKE,WAZL;;AAaV,cAAMN,KAAK;AACTK,YAAAA,KAAK,EAALA,KADS;AAETC,YAAAA,WAAW,EAAXA;AAFS,aAGNnB,SAAS,CAAEW,QAAQ,IAAIO,KAAK,CAACP,QAAD,CAAlB,IAAiC,EAAlC,EAAsCK,IAAtC,CAHH;AAITD,YAAAA,QAAQ,EAARA;AAJS,YAAX;;AAOA,cAAIX,gBAAgB,CAACM,gBAAD,CAApB,EAAwC;AACtC,mBAAO,oBAAC,gBAAD;AAAkB,cAAA,GAAG,EAAEI;AAAvB,eAAyCD,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACD;;AACD,iBAAO,oBAAC,gBAAD,eAAsBA,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACD,SAzBH,CADF;AA6BD;AAnC6C;;AAAA;AAAA,IAClBd,KAAK,CAACM,SADY;;AAsChD,MAAMe,IAAI,GAAGT,QAAQ,eACPA,QADO,gBAEPD,gBAAgB,CAACW,WAAjB,IACRX,gBAAgB,CAACU,IADT,IAER,WAJe,CAArB;;AAMA,MAAIhB,gBAAgB,CAACM,gBAAD,CAApB,EAAwC;AACtC,QAAMY,UAAU,GAAG,SAAbA,UAAa,CAACT,KAAD,EAAQU,GAAR;AAAA,aACjB,oBAAC,eAAD,eAAqBV,KAArB;AAA4B,QAAA,YAAY,EAAEU,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,SADiB;AAAA,KAAnB;;AAIAD,IAAAA,UAAU,CAACD,WAAX,GAAyBD,IAAzB;AACA,WAAOnB,oBAAoB,CAACF,KAAK,CAACuB,UAAN,CAAiBA,UAAjB,CAAD,EAA+BZ,gBAA/B,CAA3B;AACD;;AAEDE,EAAAA,eAAe,CAACS,WAAhB,GAA8BD,IAA9B;AACA,SAAOR,eAAP;AACD,CAvDD;;AAyDA,eAAeH,SAAf","sourcesContent":["import React from 'react';\nimport deepmerge from 'deepmerge';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\n\nimport { ThemeConsumer } from './ThemeProvider';\nimport DefaultTheme from './theme';\n\nconst isClassComponent = Component =>\n  Boolean(Component.prototype && Component.prototype.isReactComponent);\n\nconst withTheme = (WrappedComponent, themeKey) => {\n  class ThemedComponent extends React.Component {\n    render() {\n      /* eslint-disable react/prop-types */\n      const { forwardedRef, children, ...rest } = this.props;\n\n      return (\n        <ThemeConsumer>\n          {context => {\n            // If user isn't using ThemeProvider\n            if (!context) {\n              const props = { ...rest, theme: DefaultTheme, children };\n\n              return isClassComponent(WrappedComponent) ? (\n                <WrappedComponent ref={forwardedRef} {...props} />\n              ) : (\n                <WrappedComponent {...props} />\n              );\n            }\n\n            const { theme, updateTheme } = context;\n            const props = {\n              theme,\n              updateTheme,\n              ...deepmerge((themeKey && theme[themeKey]) || {}, rest),\n              children,\n            };\n\n            if (isClassComponent(WrappedComponent)) {\n              return <WrappedComponent ref={forwardedRef} {...props} />;\n            }\n            return <WrappedComponent {...props} />;\n          }}\n        </ThemeConsumer>\n      );\n    }\n  }\n\n  const name = themeKey\n    ? `Themed.${themeKey}`\n    : `Themed.${WrappedComponent.displayName ||\n        WrappedComponent.name ||\n        'Component'}`;\n\n  if (isClassComponent(WrappedComponent)) {\n    const forwardRef = (props, ref) => (\n      <ThemedComponent {...props} forwardedRef={ref} />\n    );\n\n    forwardRef.displayName = name;\n    return hoistNonReactStatics(React.forwardRef(forwardRef), WrappedComponent);\n  }\n\n  ThemedComponent.displayName = name;\n  return ThemedComponent;\n};\n\nexport default withTheme;\n"]},"metadata":{},"sourceType":"module"}