{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\development\\\\FindFood\\\\src\\\\components\\\\MenuButton\\\\MenuButton.js\";\nimport React from 'react';\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PropTypes from 'prop-types';\nimport styles from \"./styles\";\n\nvar MenuButton = function (_React$Component) {\n  _inherits(MenuButton, _React$Component);\n\n  function MenuButton() {\n    _classCallCheck(this, MenuButton);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MenuButton).apply(this, arguments));\n  }\n\n  _createClass(MenuButton, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(TouchableHighlight, {\n        onPress: this.props.onPress,\n        style: styles.btnClickContain,\n        underlayColor: \"rgba(128, 128, 128, 0.1)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.btnContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        }\n      }, React.createElement(Image, {\n        source: this.props.source,\n        style: styles.btnIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        }\n      }), React.createElement(Text, {\n        style: styles.btnText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        }\n      }, this.props.title)));\n    }\n  }]);\n\n  return MenuButton;\n}(React.Component);\n\nexport { MenuButton as default };\nMenuButton.propTypes = {\n  onPress: PropTypes.func,\n  source: PropTypes.number,\n  title: PropTypes.string\n};","map":{"version":3,"sources":["C:/development/FindFood/src/components/MenuButton/MenuButton.js"],"names":["React","PropTypes","styles","MenuButton","props","onPress","btnClickContain","btnContainer","source","btnIcon","btnText","title","Component","propTypes","func","number","string"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP;;IAEqBC,U;;;;;;;;;;;6BACV;AACP,aACE,oBAAC,kBAAD;AACE,QAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,OADtB;AAEE,QAAA,KAAK,EAAEH,MAAM,CAACI,eAFhB;AAGE,QAAA,aAAa,EAAC,0BAHhB;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEJ,MAAM,CAACK,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAE,KAAKH,KAAL,CAAWI,MAA1B;AAAkC,QAAA,KAAK,EAAEN,MAAM,CAACO,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,MAAM,CAACQ,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8B,KAAKN,KAAL,CAAWO,KAAzC,CAFF,CALF,CADF;AAYD;;;;EAdqCX,KAAK,CAACY,S;;SAAzBT,U;AAiBrBA,UAAU,CAACU,SAAX,GAAuB;AACrBR,EAAAA,OAAO,EAAEJ,SAAS,CAACa,IADE;AAErBN,EAAAA,MAAM,EAAEP,SAAS,CAACc,MAFG;AAGrBJ,EAAAA,KAAK,EAAEV,SAAS,CAACe;AAHI,CAAvB","sourcesContent":["import React from 'react';\nimport { TouchableHighlight, Image, Text, View } from 'react-native';\nimport PropTypes from 'prop-types';\nimport styles from './styles';\n\nexport default class MenuButton extends React.Component {\n  render() {\n    return (\n      <TouchableHighlight\n        onPress={this.props.onPress}\n        style={styles.btnClickContain}\n        underlayColor=\"rgba(128, 128, 128, 0.1)\"\n      >\n        <View style={styles.btnContainer}>\n          <Image source={this.props.source} style={styles.btnIcon} />\n          <Text style={styles.btnText}>{this.props.title}</Text>\n        </View>\n      </TouchableHighlight>\n    );\n  }\n}\n\nMenuButton.propTypes = {\n  onPress: PropTypes.func,\n  source: PropTypes.number,\n  title: PropTypes.string\n};\n"]},"metadata":{},"sourceType":"module"}