{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\development\\\\FindFood\\\\node_modules\\\\react-native-elements\\\\src\\\\buttons\\\\Button.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { withTheme, ViewPropTypes } from \"../config\";\nimport { renderNode, nodeType, conditionalStyle, color } from \"../helpers\";\nimport Icon from \"../icons/Icon\";\n\nvar defaultLoadingProps = function defaultLoadingProps(type, theme) {\n  return {\n    color: type === 'solid' ? 'white' : theme.colors.primary,\n    size: 'small'\n  };\n};\n\nvar Button = function (_Component) {\n  _inherits(Button, _Component);\n\n  function Button() {\n    _classCallCheck(this, Button);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Button).apply(this, arguments));\n  }\n\n  _createClass(Button, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          linearGradientProps = _this$props.linearGradientProps,\n          ViewComponent = _this$props.ViewComponent;\n\n      if (linearGradientProps && !global.Expo && !ViewComponent) {\n        console.error(\"You need to pass a ViewComponent to use linearGradientProps !\\nExample: ViewComponent={require('react-native-linear-gradient')}\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          TouchableComponent = _this$props2.TouchableComponent,\n          containerStyle = _this$props2.containerStyle,\n          onPress = _this$props2.onPress,\n          buttonStyle = _this$props2.buttonStyle,\n          type = _this$props2.type,\n          loading = _this$props2.loading,\n          loadingStyle = _this$props2.loadingStyle,\n          passedLoadingProps = _this$props2.loadingProps,\n          title = _this$props2.title,\n          titleProps = _this$props2.titleProps,\n          titleStyle = _this$props2.titleStyle,\n          icon = _this$props2.icon,\n          iconContainerStyle = _this$props2.iconContainerStyle,\n          iconRight = _this$props2.iconRight,\n          disabled = _this$props2.disabled,\n          disabledStyle = _this$props2.disabledStyle,\n          disabledTitleStyle = _this$props2.disabledTitleStyle,\n          raised = _this$props2.raised,\n          linearGradientProps = _this$props2.linearGradientProps,\n          _this$props2$ViewComp = _this$props2.ViewComponent,\n          ViewComponent = _this$props2$ViewComp === void 0 ? !disabled && linearGradientProps && global.Expo ? global.Expo.LinearGradient : View : _this$props2$ViewComp,\n          theme = _this$props2.theme,\n          attributes = _objectWithoutProperties(_this$props2, [\"TouchableComponent\", \"containerStyle\", \"onPress\", \"buttonStyle\", \"type\", \"loading\", \"loadingStyle\", \"loadingProps\", \"title\", \"titleProps\", \"titleStyle\", \"icon\", \"iconContainerStyle\", \"iconRight\", \"disabled\", \"disabledStyle\", \"disabledTitleStyle\", \"raised\", \"linearGradientProps\", \"ViewComponent\", \"theme\"]);\n\n      if (Platform.OS === 'android' && buttonStyle.borderRadius && !attributes.background) {\n        if (Platform.Version >= 21) {\n          attributes.background = TouchableNativeFeedback.Ripple('ThemeAttrAndroid', false);\n        } else {\n          attributes.background = TouchableNativeFeedback.SelectableBackground();\n        }\n      }\n\n      var loadingProps = _objectSpread({}, defaultLoadingProps(type, theme), {}, passedLoadingProps);\n\n      return React.createElement(View, {\n        style: StyleSheet.flatten([styles.container, {\n          borderRadius: buttonStyle.borderRadius || styles.container.borderRadius\n        }, containerStyle, raised && !disabled && styles.raised(type)]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        }\n      }, React.createElement(TouchableComponent, _extends({\n        onPress: onPress,\n        activeOpacity: 0.3,\n        disabled: disabled\n      }, attributes, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        }\n      }), React.createElement(ViewComponent, _extends({}, linearGradientProps, {\n        style: StyleSheet.flatten([styles.button(type, theme), buttonStyle, disabled && styles.disabled(type, theme), disabled && disabledStyle]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        }\n      }), loading && React.createElement(ActivityIndicator, _extends({\n        style: StyleSheet.flatten([styles.loading, loadingStyle]),\n        color: loadingProps.color,\n        size: loadingProps.size\n      }, loadingProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        }\n      })), !loading && icon && !iconRight && renderNode(Icon, icon, {\n        containerStyle: StyleSheet.flatten([styles.iconContainer, iconContainerStyle])\n      }), !loading && !!title && React.createElement(Text, _extends({\n        style: StyleSheet.flatten([styles.title(type, theme), titleStyle, disabled && styles.disabledTitle(theme), disabled && disabledTitleStyle])\n      }, titleProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        }\n      }), title), !loading && icon && iconRight && renderNode(Icon, icon, {\n        containerStyle: StyleSheet.flatten([styles.iconContainer, iconContainerStyle])\n      }))));\n    }\n  }]);\n\n  return Button;\n}(Component);\n\nButton.propTypes = {\n  title: PropTypes.string,\n  titleStyle: Text.propTypes.style,\n  titleProps: PropTypes.object,\n  buttonStyle: ViewPropTypes.style,\n  type: PropTypes.oneOf(['solid', 'clear', 'outline']),\n  loading: PropTypes.bool,\n  loadingStyle: ViewPropTypes.style,\n  loadingProps: PropTypes.object,\n  onPress: PropTypes.func,\n  containerStyle: ViewPropTypes.style,\n  icon: nodeType,\n  iconContainerStyle: ViewPropTypes.style,\n  iconRight: PropTypes.bool,\n  linearGradientProps: PropTypes.object,\n  TouchableComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  ViewComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  disabled: PropTypes.bool,\n  disabledStyle: ViewPropTypes.style,\n  disabledTitleStyle: Text.propTypes.style,\n  raised: PropTypes.bool,\n  theme: PropTypes.object\n};\nButton.defaultProps = {\n  title: '',\n  iconRight: false,\n  TouchableComponent: Platform.select({\n    android: TouchableNativeFeedback,\n    default: TouchableOpacity\n  }),\n  onPress: function onPress() {\n    return console.log('Please attach a method to this component');\n  },\n  type: 'solid',\n  buttonStyle: {\n    borderRadius: 3\n  },\n  disabled: false,\n  raised: false,\n  loading: false\n};\nvar styles = {\n  button: function button(type, theme) {\n    return {\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'center',\n      borderRadius: 3,\n      backgroundColor: type === 'solid' ? theme.colors.primary : 'transparent',\n      padding: 8,\n      borderWidth: type === 'outline' ? StyleSheet.hairlineWidth : 0,\n      borderColor: theme.colors.primary\n    };\n  },\n  container: {\n    borderRadius: 3\n  },\n  disabled: function disabled(type, theme) {\n    return _objectSpread({}, conditionalStyle(type === 'solid', {\n      backgroundColor: theme.colors.disabled\n    }), {}, conditionalStyle(type === 'outline', {\n      borderColor: color(theme.colors.disabled).darken(0.3)\n    }));\n  },\n  disabledTitle: function disabledTitle(theme) {\n    return {\n      color: color(theme.colors.disabled).darken(0.3)\n    };\n  },\n  title: function title(type, theme) {\n    return _objectSpread({\n      color: type === 'solid' ? 'white' : theme.colors.primary,\n      fontSize: 16,\n      textAlign: 'center',\n      paddingTop: 2,\n      paddingBottom: 1\n    }, Platform.select({\n      android: {\n        fontFamily: 'sans-serif-medium'\n      },\n      default: {\n        fontSize: 18\n      }\n    }));\n  },\n  iconContainer: {\n    marginHorizontal: 5\n  },\n  raised: function raised(type) {\n    return type !== 'clear' && _objectSpread({\n      backgroundColor: '#fff'\n    }, Platform.select({\n      android: {\n        elevation: 4\n      },\n      default: {\n        shadowColor: 'rgba(0,0,0, .4)',\n        shadowOffset: {\n          height: 1,\n          width: 1\n        },\n        shadowOpacity: 1,\n        shadowRadius: 1\n      }\n    }));\n  },\n  loading: {\n    marginVertical: 2\n  }\n};\nexport { Button };\nexport default withTheme(Button, 'Button');","map":{"version":3,"sources":["C:/development/FindFood/node_modules/react-native-elements/src/buttons/Button.js"],"names":["PropTypes","React","Component","withTheme","ViewPropTypes","renderNode","nodeType","conditionalStyle","color","Icon","defaultLoadingProps","type","theme","colors","primary","size","Button","props","linearGradientProps","ViewComponent","global","Expo","console","error","TouchableComponent","containerStyle","onPress","buttonStyle","loading","loadingStyle","passedLoadingProps","loadingProps","title","titleProps","titleStyle","icon","iconContainerStyle","iconRight","disabled","disabledStyle","disabledTitleStyle","raised","LinearGradient","View","attributes","Platform","OS","borderRadius","background","Version","TouchableNativeFeedback","Ripple","SelectableBackground","StyleSheet","flatten","styles","container","button","iconContainer","disabledTitle","propTypes","string","Text","style","object","oneOf","bool","func","oneOfType","defaultProps","select","android","default","TouchableOpacity","log","flexDirection","justifyContent","alignItems","backgroundColor","padding","borderWidth","hairlineWidth","borderColor","darken","fontSize","textAlign","paddingTop","paddingBottom","fontFamily","marginHorizontal","elevation","shadowColor","shadowOffset","height","width","shadowOpacity","shadowRadius","marginVertical"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport {\n  View,\n  Text,\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  ActivityIndicator,\n  Platform,\n  StyleSheet,\n} from 'react-native';\n\nimport { withTheme, ViewPropTypes } from '../config';\nimport { renderNode, nodeType, conditionalStyle, color } from '../helpers';\nimport Icon from '../icons/Icon';\n\nconst defaultLoadingProps = (type, theme) => ({\n  color: type === 'solid' ? 'white' : theme.colors.primary,\n  size: 'small',\n});\n\nclass Button extends Component {\n  componentDidMount() {\n    const { linearGradientProps, ViewComponent } = this.props;\n    if (linearGradientProps && !global.Expo && !ViewComponent) {\n      /* eslint-disable no-console */\n      console.error(\n        `You need to pass a ViewComponent to use linearGradientProps !\\nExample: ViewComponent={require('react-native-linear-gradient')}`\n      );\n    }\n  }\n\n  render() {\n    const {\n      TouchableComponent,\n      containerStyle,\n      onPress,\n      buttonStyle,\n      type,\n      loading,\n      loadingStyle,\n      loadingProps: passedLoadingProps,\n      title,\n      titleProps,\n      titleStyle,\n      icon,\n      iconContainerStyle,\n      iconRight,\n      disabled,\n      disabledStyle,\n      disabledTitleStyle,\n      raised,\n      linearGradientProps,\n      ViewComponent = !disabled && linearGradientProps && global.Expo\n        ? global.Expo.LinearGradient\n        : View,\n      theme,\n      ...attributes\n    } = this.props;\n\n    if (\n      Platform.OS === 'android' &&\n      (buttonStyle.borderRadius && !attributes.background)\n    ) {\n      if (Platform.Version >= 21) {\n        attributes.background = TouchableNativeFeedback.Ripple(\n          'ThemeAttrAndroid',\n          false\n        );\n      } else {\n        attributes.background = TouchableNativeFeedback.SelectableBackground();\n      }\n    }\n\n    const loadingProps = {\n      ...defaultLoadingProps(type, theme),\n      ...passedLoadingProps,\n    };\n\n    return (\n      <View\n        style={StyleSheet.flatten([\n          styles.container,\n          {\n            borderRadius:\n              buttonStyle.borderRadius || styles.container.borderRadius,\n          },\n          containerStyle,\n          raised && !disabled && styles.raised(type),\n        ])}\n      >\n        <TouchableComponent\n          onPress={onPress}\n          activeOpacity={0.3}\n          disabled={disabled}\n          {...attributes}\n        >\n          <ViewComponent\n            {...linearGradientProps}\n            style={StyleSheet.flatten([\n              styles.button(type, theme),\n              buttonStyle,\n              disabled && styles.disabled(type, theme),\n              disabled && disabledStyle,\n            ])}\n          >\n            {loading && (\n              <ActivityIndicator\n                style={StyleSheet.flatten([styles.loading, loadingStyle])}\n                color={loadingProps.color}\n                size={loadingProps.size}\n                {...loadingProps}\n              />\n            )}\n\n            {!loading &&\n              icon &&\n              !iconRight &&\n              renderNode(Icon, icon, {\n                containerStyle: StyleSheet.flatten([\n                  styles.iconContainer,\n                  iconContainerStyle,\n                ]),\n              })}\n\n            {!loading && !!title && (\n              <Text\n                style={StyleSheet.flatten([\n                  styles.title(type, theme),\n                  titleStyle,\n                  disabled && styles.disabledTitle(theme),\n                  disabled && disabledTitleStyle,\n                ])}\n                {...titleProps}\n              >\n                {title}\n              </Text>\n            )}\n\n            {!loading &&\n              icon &&\n              iconRight &&\n              renderNode(Icon, icon, {\n                containerStyle: StyleSheet.flatten([\n                  styles.iconContainer,\n                  iconContainerStyle,\n                ]),\n              })}\n          </ViewComponent>\n        </TouchableComponent>\n      </View>\n    );\n  }\n}\n\nButton.propTypes = {\n  title: PropTypes.string,\n  titleStyle: Text.propTypes.style,\n  titleProps: PropTypes.object,\n  buttonStyle: ViewPropTypes.style,\n  type: PropTypes.oneOf(['solid', 'clear', 'outline']),\n  loading: PropTypes.bool,\n  loadingStyle: ViewPropTypes.style,\n  loadingProps: PropTypes.object,\n  onPress: PropTypes.func,\n  containerStyle: ViewPropTypes.style,\n  icon: nodeType,\n  iconContainerStyle: ViewPropTypes.style,\n  iconRight: PropTypes.bool,\n  linearGradientProps: PropTypes.object,\n  TouchableComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  ViewComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  disabled: PropTypes.bool,\n  disabledStyle: ViewPropTypes.style,\n  disabledTitleStyle: Text.propTypes.style,\n  raised: PropTypes.bool,\n  theme: PropTypes.object,\n};\n\nButton.defaultProps = {\n  title: '',\n  iconRight: false,\n  TouchableComponent: Platform.select({\n    android: TouchableNativeFeedback,\n    default: TouchableOpacity,\n  }),\n  onPress: () => console.log('Please attach a method to this component'),\n  type: 'solid',\n  buttonStyle: {\n    borderRadius: 3,\n  },\n  disabled: false,\n  raised: false,\n  loading: false,\n};\n\nconst styles = {\n  button: (type, theme) => ({\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 3,\n    backgroundColor: type === 'solid' ? theme.colors.primary : 'transparent',\n    padding: 8,\n    borderWidth: type === 'outline' ? StyleSheet.hairlineWidth : 0,\n    borderColor: theme.colors.primary,\n  }),\n  container: {\n    borderRadius: 3,\n  },\n  disabled: (type, theme) => ({\n    ...conditionalStyle(type === 'solid', {\n      backgroundColor: theme.colors.disabled,\n    }),\n    ...conditionalStyle(type === 'outline', {\n      borderColor: color(theme.colors.disabled).darken(0.3),\n    }),\n  }),\n  disabledTitle: theme => ({\n    color: color(theme.colors.disabled).darken(0.3),\n  }),\n  title: (type, theme) => ({\n    color: type === 'solid' ? 'white' : theme.colors.primary,\n    fontSize: 16,\n    textAlign: 'center',\n    paddingTop: 2,\n    paddingBottom: 1,\n    ...Platform.select({\n      android: {\n        fontFamily: 'sans-serif-medium',\n      },\n      default: {\n        fontSize: 18,\n      },\n    }),\n  }),\n  iconContainer: {\n    marginHorizontal: 5,\n  },\n  raised: type =>\n    type !== 'clear' && {\n      backgroundColor: '#fff',\n      ...Platform.select({\n        android: {\n          elevation: 4,\n        },\n        default: {\n          shadowColor: 'rgba(0,0,0, .4)',\n          shadowOffset: { height: 1, width: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 1,\n        },\n      }),\n    },\n  loading: {\n    marginVertical: 2,\n  },\n};\n\nexport { Button };\nexport default withTheme(Button, 'Button');\n"]},"metadata":{},"sourceType":"module"}