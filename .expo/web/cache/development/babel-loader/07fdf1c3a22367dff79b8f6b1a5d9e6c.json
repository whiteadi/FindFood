{"ast":null,"code":"var _jsxFileName = \"C:\\\\development\\\\FindFood\\\\src\\\\screens\\\\RecipesList\\\\RecipesListScreen.js\";\nimport React from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport styles from \"./styles\";\nimport { useRecipes } from \"../../data/MockDataAPI\";\n\nvar RecipesListScreen = function RecipesListScreen(_ref) {\n  var navigation = _ref.navigation;\n  var item = navigation.getParam(\"category\");\n\n  var _useRecipes = useRecipes(item.strCategory),\n      recipes = _useRecipes.recipes,\n      loading = _useRecipes.loading,\n      error = _useRecipes.error;\n\n  var onPressRecipe = function onPressRecipe(item) {\n    navigation.navigate(\"Recipe\", {\n      item: item\n    });\n  };\n\n  var renderRecipes = function renderRecipes(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(TouchableHighlight, {\n      underlayColor: \"rgba(73,182,77,0.9)\",\n      onPress: function onPress() {\n        return onPressRecipe(item);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      }\n    }, React.createElement(View, {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      }\n    }, React.createElement(Image, {\n      style: styles.photo,\n      source: {\n        uri: item.strCategoryThumb\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      }\n    }), React.createElement(Text, {\n      style: styles.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      }\n    }, item.title), React.createElement(Text, {\n      style: styles.category,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      }\n    }, item.strCategory)));\n  };\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    }\n  }, !loading && !error && recipes && React.createElement(FlatList, {\n    vertical: true,\n    showsVerticalScrollIndicator: false,\n    numColumns: 2,\n    data: recipes,\n    renderItem: renderRecipes,\n    keyExtractor: function keyExtractor(item) {\n      return \"\" + item.strCategory;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    }\n  }));\n};\n\nRecipesListScreen.navigationOptions = function (_ref3) {\n  var navigation = _ref3.navigation;\n  return {\n    title: navigation.getParam(\"title\")\n  };\n};\n\nexport default RecipesListScreen;","map":{"version":3,"sources":["C:/development/FindFood/src/screens/RecipesList/RecipesListScreen.js"],"names":["React","styles","useRecipes","RecipesListScreen","navigation","item","getParam","strCategory","recipes","loading","error","onPressRecipe","navigate","renderRecipes","container","photo","uri","strCategoryThumb","title","category","navigationOptions"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAEA,OAAOC,MAAP;AACA,SAASC,UAAT;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AAC5C,MAAMC,IAAI,GAAGD,UAAU,CAACE,QAAX,CAAoB,UAApB,CAAb;;AAD4C,oBAERJ,UAAU,CAACG,IAAI,CAACE,WAAN,CAFF;AAAA,MAEpCC,OAFoC,eAEpCA,OAFoC;AAAA,MAE3BC,OAF2B,eAE3BA,OAF2B;AAAA,MAElBC,KAFkB,eAElBA,KAFkB;;AAI5C,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACN,IAAD,EAAU;AAC9BD,IAAAA,UAAU,CAACQ,QAAX,CAAoB,QAApB,EAA8B;AAAEP,MAAAA,IAAI,EAAJA;AAAF,KAA9B;AACD,GAFD;;AAIA,MAAMQ,aAAa,GAAG,SAAhBA,aAAgB;AAAA,QAAGR,IAAH,SAAGA,IAAH;AAAA,WACpB,oBAAC,kBAAD;AACE,MAAA,aAAa,EAAC,qBADhB;AAEE,MAAA,OAAO,EAAE;AAAA,eAAMM,aAAa,CAACN,IAAD,CAAnB;AAAA,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEJ,MAAM,CAACa,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEb,MAAM,CAACc,KAArB;AAA4B,MAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAEX,IAAI,CAACY;AAAZ,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEhB,MAAM,CAACiB,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4Bb,IAAI,CAACa,KAAjC,CAFF,EAGE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEjB,MAAM,CAACkB,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+Bd,IAAI,CAACE,WAApC,CAHF,CAJF,CADoB;AAAA,GAAtB;;AAaA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACE,OAAD,IAAY,CAACC,KAAb,IAAsBF,OAAtB,IACC,oBAAC,QAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,4BAA4B,EAAE,KAFhC;AAGE,IAAA,UAAU,EAAE,CAHd;AAIE,IAAA,IAAI,EAAEA,OAJR;AAKE,IAAA,UAAU,EAAEK,aALd;AAME,IAAA,YAAY,EAAE,sBAACR,IAAD;AAAA,kBAAaA,IAAI,CAACE,WAAlB;AAAA,KANhB;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADF;AAcD,CAnCD;;AAqCAJ,iBAAiB,CAACiB,iBAAlB,GAAsC,iBAAoB;AAAA,MAAjBhB,UAAiB,SAAjBA,UAAiB;AACxD,SAAO;AACLc,IAAAA,KAAK,EAAEd,UAAU,CAACE,QAAX,CAAoB,OAApB;AADF,GAAP;AAGD,CAJD;;AAMA,eAAeH,iBAAf","sourcesContent":["import React from \"react\";\nimport { FlatList, Text, View, TouchableHighlight, Image } from \"react-native\";\nimport styles from \"./styles\";\nimport { useRecipes } from \"../../data/MockDataAPI\";\n\nconst RecipesListScreen = ({ navigation }) => {\n  const item = navigation.getParam(\"category\");\n  const { recipes, loading, error } = useRecipes(item.strCategory);\n\n  const onPressRecipe = (item) => {\n    navigation.navigate(\"Recipe\", { item });\n  };\n\n  const renderRecipes = ({ item }) => (\n    <TouchableHighlight\n      underlayColor=\"rgba(73,182,77,0.9)\"\n      onPress={() => onPressRecipe(item)}\n    >\n      <View style={styles.container}>\n        <Image style={styles.photo} source={{ uri: item.strCategoryThumb }} />\n        <Text style={styles.title}>{item.title}</Text>\n        <Text style={styles.category}>{item.strCategory}</Text>\n      </View>\n    </TouchableHighlight>\n  );\n\n  return (\n    <View>\n      {!loading && !error && recipes && (\n        <FlatList\n          vertical\n          showsVerticalScrollIndicator={false}\n          numColumns={2}\n          data={recipes}\n          renderItem={renderRecipes}\n          keyExtractor={(item) => `${item.strCategory}`}\n        />\n      )}\n    </View>\n  );\n};\n\nRecipesListScreen.navigationOptions = ({ navigation }) => {\n  return {\n    title: navigation.getParam(\"title\"),\n  };\n};\n\nexport default RecipesListScreen;\n"]},"metadata":{},"sourceType":"module"}