{"ast":null,"code":"var _jsxFileName = \"C:\\\\development\\\\FindFood\\\\src\\\\screens\\\\Categories\\\\CategoriesScreen.js\";\nimport React from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport styles from \"./styles\";\nimport { useCategories } from \"../../data/MockDataAPI\";\n\nvar CategoriesScreen = function CategoriesScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useCategories = useCategories(),\n      categories = _useCategories.categories,\n      loading = _useCategories.loading,\n      error = _useCategories.error;\n\n  var onPressCategory = function onPressCategory(item) {\n    var title = item.strCategory;\n    var category = item;\n    navigation.navigate(\"RecipesList\", {\n      category: category,\n      title: title\n    });\n  };\n\n  var renderCategory = function renderCategory(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(TouchableHighlight, {\n      underlayColor: \"rgba(73,182,77,0.9)\",\n      onPress: function onPress() {\n        return onPressCategory(item);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      }\n    }, React.createElement(View, {\n      style: styles.categoriesItemContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      }\n    }, React.createElement(Image, {\n      style: styles.categoriesPhoto,\n      source: {\n        uri: item.strCategoryThumb\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      }\n    }), React.createElement(Text, {\n      style: styles.categoriesName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      }\n    }, item.strCategory), false && React.createElement(Text, {\n      style: styles.categoriesInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      }\n    }, item.strCategoryDescription)));\n  };\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    }\n  }, !loading && !error && categories && React.createElement(FlatList, {\n    data: categories,\n    renderItem: renderCategory,\n    keyExtractor: function keyExtractor(item) {\n      return \"\" + item.id;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    }\n  }));\n};\n\nCategoriesScreen.navigationOptions = {\n  title: \"Categories\"\n};\nexport default CategoriesScreen;","map":{"version":3,"sources":["C:/development/FindFood/src/screens/Categories/CategoriesScreen.js"],"names":["React","styles","useCategories","CategoriesScreen","navigation","categories","loading","error","onPressCategory","item","title","strCategory","category","navigate","renderCategory","categoriesItemContainer","categoriesPhoto","uri","strCategoryThumb","categoriesName","categoriesInfo","strCategoryDescription","id","navigationOptions"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAEA,OAAOC,MAAP;AACA,SAASC,aAAT;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAAA,uBACJF,aAAa,EADT;AAAA,MACnCG,UADmC,kBACnCA,UADmC;AAAA,MACvBC,OADuB,kBACvBA,OADuB;AAAA,MACdC,KADc,kBACdA,KADc;;AAG3C,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,IAAD,EAAU;AAChC,QAAMC,KAAK,GAAGD,IAAI,CAACE,WAAnB;AACA,QAAMC,QAAQ,GAAGH,IAAjB;AACAL,IAAAA,UAAU,CAACS,QAAX,CAAoB,aAApB,EAAmC;AAAED,MAAAA,QAAQ,EAARA,QAAF;AAAYF,MAAAA,KAAK,EAALA;AAAZ,KAAnC;AACD,GAJD;;AAMA,MAAMI,cAAc,GAAG,SAAjBA,cAAiB;AAAA,QAAGL,IAAH,SAAGA,IAAH;AAAA,WACrB,oBAAC,kBAAD;AACE,MAAA,aAAa,EAAC,qBADhB;AAEE,MAAA,OAAO,EAAE;AAAA,eAAMD,eAAe,CAACC,IAAD,CAArB;AAAA,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAER,MAAM,CAACc,uBAApB;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAEd,MAAM,CAACe,eADhB;AAEE,MAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAER,IAAI,CAACS;AAAZ,OAFV;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEjB,MAAM,CAACkB,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCV,IAAI,CAACE,WAA1C,CALF,EAMG,SACC,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEV,MAAM,CAACmB,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA,OACGX,IAAI,CAACY,sBADR,CAPJ,CAJF,CADqB;AAAA,GAAvB;;AAoBA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACf,OAAD,IAAY,CAACC,KAAb,IAAsBF,UAAtB,IACC,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEA,UADR;AAEE,IAAA,UAAU,EAAES,cAFd;AAGE,IAAA,YAAY,EAAE,sBAACL,IAAD;AAAA,kBAAaA,IAAI,CAACa,EAAlB;AAAA,KAHhB;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADF;AAWD,CAxCD;;AA0CAnB,gBAAgB,CAACoB,iBAAjB,GAAqC;AACnCb,EAAAA,KAAK,EAAE;AAD4B,CAArC;AAIA,eAAeP,gBAAf","sourcesContent":["import React from \"react\";\nimport { FlatList, Text, View, Image, TouchableHighlight } from \"react-native\";\nimport styles from \"./styles\";\nimport { useCategories } from \"../../data/MockDataAPI\";\n\nconst CategoriesScreen = ({ navigation }) => {\n  const { categories, loading, error } = useCategories();\n\n  const onPressCategory = (item) => {\n    const title = item.strCategory;\n    const category = item;\n    navigation.navigate(\"RecipesList\", { category, title });\n  };\n\n  const renderCategory = ({ item }) => (\n    <TouchableHighlight\n      underlayColor=\"rgba(73,182,77,0.9)\"\n      onPress={() => onPressCategory(item)}\n    >\n      <View style={styles.categoriesItemContainer}>\n        <Image\n          style={styles.categoriesPhoto}\n          source={{ uri: item.strCategoryThumb }}\n        />\n        <Text style={styles.categoriesName}>{item.strCategory}</Text>\n        {false && (\n          <Text style={styles.categoriesInfo}>\n            {item.strCategoryDescription}\n          </Text>\n        )}\n      </View>\n    </TouchableHighlight>\n  );\n\n  return (\n    <View>\n      {!loading && !error && categories && (\n        <FlatList\n          data={categories}\n          renderItem={renderCategory}\n          keyExtractor={(item) => `${item.id}`}\n        />\n      )}\n    </View>\n  );\n};\n\nCategoriesScreen.navigationOptions = {\n  title: \"Categories\",\n};\n\nexport default CategoriesScreen;\n"]},"metadata":{},"sourceType":"module"}