{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\development\\\\FindFood\\\\node_modules\\\\react-native-elements\\\\src\\\\input\\\\Input.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { nodeType, renderNode } from \"../helpers\";\nimport { fonts, withTheme, ViewPropTypes, TextPropTypes } from \"../config\";\nimport Icon from \"../icons/Icon\";\n\nvar renderText = function renderText(content, defaultProps, style) {\n  return renderNode(Text, content, _objectSpread({}, defaultProps, {\n    style: StyleSheet.flatten([style, defaultProps && defaultProps.style])\n  }));\n};\n\nvar Input = function (_React$Component) {\n  _inherits(Input, _React$Component);\n\n  function Input() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Input);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Input)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.shakeAnimationValue = new Animated.Value(0);\n\n    _this.shake = function () {\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          shakeAnimationValue = _assertThisInitialize.shakeAnimationValue;\n\n      shakeAnimationValue.setValue(0);\n      Animated.timing(shakeAnimationValue, {\n        duration: 375,\n        toValue: 3,\n        ease: Easing.bounce\n      }).start();\n    };\n\n    return _this;\n  }\n\n  _createClass(Input, [{\n    key: \"focus\",\n    value: function focus() {\n      this.input.focus();\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.input.blur();\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.input.clear();\n    }\n  }, {\n    key: \"isFocused\",\n    value: function isFocused() {\n      return this.input.isFocused();\n    }\n  }, {\n    key: \"setNativeProps\",\n    value: function setNativeProps(nativeProps) {\n      this.input.setNativeProps(nativeProps);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          containerStyle = _this$props.containerStyle,\n          inputContainerStyle = _this$props.inputContainerStyle,\n          leftIcon = _this$props.leftIcon,\n          leftIconContainerStyle = _this$props.leftIconContainerStyle,\n          rightIcon = _this$props.rightIcon,\n          rightIconContainerStyle = _this$props.rightIconContainerStyle,\n          _this$props$inputComp = _this$props.inputComponent,\n          InputComponent = _this$props$inputComp === void 0 ? TextInput : _this$props$inputComp,\n          inputStyle = _this$props.inputStyle,\n          errorProps = _this$props.errorProps,\n          errorStyle = _this$props.errorStyle,\n          errorMessage = _this$props.errorMessage,\n          label = _this$props.label,\n          labelStyle = _this$props.labelStyle,\n          labelProps = _this$props.labelProps,\n          theme = _this$props.theme,\n          attributes = _objectWithoutProperties(_this$props, [\"containerStyle\", \"inputContainerStyle\", \"leftIcon\", \"leftIconContainerStyle\", \"rightIcon\", \"rightIconContainerStyle\", \"inputComponent\", \"inputStyle\", \"errorProps\", \"errorStyle\", \"errorMessage\", \"label\", \"labelStyle\", \"labelProps\", \"theme\"]);\n\n      var translateX = this.shakeAnimationValue.interpolate({\n        inputRange: [0, 0.5, 1, 1.5, 2, 2.5, 3],\n        outputRange: [0, -15, 0, 15, 0, -15, 0]\n      });\n      return React.createElement(View, {\n        style: StyleSheet.flatten([styles.container, containerStyle]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        }\n      }, renderText(label, _objectSpread({\n        style: labelStyle\n      }, labelProps), styles.label(theme)), React.createElement(Animated.View, {\n        style: StyleSheet.flatten([styles.inputContainer(theme), inputContainerStyle, {\n          transform: [{\n            translateX: translateX\n          }]\n        }]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        }\n      }, leftIcon && React.createElement(View, {\n        style: StyleSheet.flatten([styles.iconContainer, leftIconContainerStyle]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        }\n      }, renderNode(Icon, leftIcon)), React.createElement(InputComponent, _extends({\n        testID: \"RNE__Input__text-input\",\n        underlineColorAndroid: \"transparent\"\n      }, attributes, {\n        ref: function ref(_ref) {\n          _this2.input = _ref;\n        },\n        style: StyleSheet.flatten([styles.input, inputStyle]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        }\n      })), rightIcon && React.createElement(View, {\n        style: StyleSheet.flatten([styles.iconContainer, rightIconContainerStyle]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        }\n      }, renderNode(Icon, rightIcon))), !!errorMessage && React.createElement(Text, _extends({}, errorProps, {\n        style: StyleSheet.flatten([styles.error(theme), errorStyle && errorStyle]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        }\n      }), errorMessage));\n    }\n  }]);\n\n  return Input;\n}(React.Component);\n\nInput.propTypes = {\n  containerStyle: ViewPropTypes.style,\n  inputContainerStyle: ViewPropTypes.style,\n  leftIcon: nodeType,\n  leftIconContainerStyle: ViewPropTypes.style,\n  rightIcon: nodeType,\n  rightIconContainerStyle: ViewPropTypes.style,\n  inputStyle: TextPropTypes.style,\n  inputComponent: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  shake: PropTypes.any,\n  errorProps: PropTypes.object,\n  errorStyle: TextPropTypes.style,\n  errorMessage: PropTypes.string,\n  label: PropTypes.node,\n  labelStyle: TextPropTypes.style,\n  labelProps: PropTypes.object,\n  theme: PropTypes.object\n};\nvar styles = {\n  container: {\n    width: '100%',\n    paddingHorizontal: 10\n  },\n  inputContainer: function inputContainer(theme) {\n    return {\n      flexDirection: 'row',\n      borderBottomWidth: 1,\n      alignItems: 'center',\n      borderColor: theme.colors.grey3\n    };\n  },\n  iconContainer: {\n    height: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginLeft: 15\n  },\n  input: {\n    alignSelf: 'center',\n    color: 'black',\n    fontSize: 18,\n    flex: 1,\n    minHeight: 40\n  },\n  error: function error(theme) {\n    return {\n      margin: 5,\n      fontSize: 12,\n      color: theme.colors.error\n    };\n  },\n  label: function label(theme) {\n    return _objectSpread({\n      fontSize: 16,\n      color: theme.colors.grey3\n    }, Platform.select({\n      android: _objectSpread({}, fonts.android.bold),\n      default: {\n        fontWeight: 'bold'\n      }\n    }));\n  }\n};\nexport { Input };\nexport default withTheme(Input, 'Input');","map":{"version":3,"sources":["C:/development/FindFood/node_modules/react-native-elements/src/input/Input.js"],"names":["React","PropTypes","nodeType","renderNode","fonts","withTheme","ViewPropTypes","TextPropTypes","Icon","renderText","content","defaultProps","style","Text","StyleSheet","flatten","Input","shakeAnimationValue","Animated","Value","shake","setValue","timing","duration","toValue","ease","Easing","bounce","start","input","focus","blur","clear","isFocused","nativeProps","setNativeProps","props","containerStyle","inputContainerStyle","leftIcon","leftIconContainerStyle","rightIcon","rightIconContainerStyle","inputComponent","InputComponent","TextInput","inputStyle","errorProps","errorStyle","errorMessage","label","labelStyle","labelProps","theme","attributes","translateX","interpolate","inputRange","outputRange","styles","container","inputContainer","transform","iconContainer","ref","error","Component","propTypes","oneOfType","string","func","any","object","node","width","paddingHorizontal","flexDirection","borderBottomWidth","alignItems","borderColor","colors","grey3","height","justifyContent","marginLeft","alignSelf","color","fontSize","flex","minHeight","margin","Platform","select","android","bold","default","fontWeight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Text,\n  View,\n  TextInput,\n  Animated,\n  Easing,\n  Platform,\n  StyleSheet,\n} from 'react-native';\n\nimport { nodeType, renderNode } from '../helpers';\nimport { fonts, withTheme, ViewPropTypes, TextPropTypes } from '../config';\n\nimport Icon from '../icons/Icon';\n\nconst renderText = (content, defaultProps, style) =>\n  renderNode(Text, content, {\n    ...defaultProps,\n    style: StyleSheet.flatten([style, defaultProps && defaultProps.style]),\n  });\n\nclass Input extends React.Component {\n  shakeAnimationValue = new Animated.Value(0);\n\n  focus() {\n    this.input.focus();\n  }\n\n  blur() {\n    this.input.blur();\n  }\n\n  clear() {\n    this.input.clear();\n  }\n\n  isFocused() {\n    return this.input.isFocused();\n  }\n\n  setNativeProps(nativeProps) {\n    this.input.setNativeProps(nativeProps);\n  }\n\n  shake = () => {\n    const { shakeAnimationValue } = this;\n\n    shakeAnimationValue.setValue(0);\n    // Animation duration based on Material Design\n    // https://material.io/guidelines/motion/duration-easing.html#duration-easing-common-durations\n    Animated.timing(shakeAnimationValue, {\n      duration: 375,\n      toValue: 3,\n      ease: Easing.bounce,\n    }).start();\n  };\n\n  render() {\n    const {\n      containerStyle,\n      inputContainerStyle,\n      leftIcon,\n      leftIconContainerStyle,\n      rightIcon,\n      rightIconContainerStyle,\n      inputComponent: InputComponent = TextInput,\n      inputStyle,\n      errorProps,\n      errorStyle,\n      errorMessage,\n      label,\n      labelStyle,\n      labelProps,\n      theme,\n      ...attributes\n    } = this.props;\n\n    const translateX = this.shakeAnimationValue.interpolate({\n      inputRange: [0, 0.5, 1, 1.5, 2, 2.5, 3],\n      outputRange: [0, -15, 0, 15, 0, -15, 0],\n    });\n\n    return (\n      <View style={StyleSheet.flatten([styles.container, containerStyle])}>\n        {renderText(\n          label,\n          { style: labelStyle, ...labelProps },\n          styles.label(theme)\n        )}\n\n        <Animated.View\n          style={StyleSheet.flatten([\n            styles.inputContainer(theme),\n            inputContainerStyle,\n            { transform: [{ translateX }] },\n          ])}\n        >\n          {leftIcon && (\n            <View\n              style={StyleSheet.flatten([\n                styles.iconContainer,\n                leftIconContainerStyle,\n              ])}\n            >\n              {renderNode(Icon, leftIcon)}\n            </View>\n          )}\n\n          <InputComponent\n            testID=\"RNE__Input__text-input\"\n            underlineColorAndroid=\"transparent\"\n            {...attributes}\n            ref={ref => {\n              this.input = ref;\n            }}\n            style={StyleSheet.flatten([styles.input, inputStyle])}\n          />\n\n          {rightIcon && (\n            <View\n              style={StyleSheet.flatten([\n                styles.iconContainer,\n                rightIconContainerStyle,\n              ])}\n            >\n              {renderNode(Icon, rightIcon)}\n            </View>\n          )}\n        </Animated.View>\n\n        {!!errorMessage && (\n          <Text\n            {...errorProps}\n            style={StyleSheet.flatten([\n              styles.error(theme),\n              errorStyle && errorStyle,\n            ])}\n          >\n            {errorMessage}\n          </Text>\n        )}\n      </View>\n    );\n  }\n}\n\nInput.propTypes = {\n  containerStyle: ViewPropTypes.style,\n  inputContainerStyle: ViewPropTypes.style,\n  leftIcon: nodeType,\n  leftIconContainerStyle: ViewPropTypes.style,\n  rightIcon: nodeType,\n  rightIconContainerStyle: ViewPropTypes.style,\n  inputStyle: TextPropTypes.style,\n  inputComponent: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  // eslint-disable-next-line react/forbid-prop-types\n  shake: PropTypes.any,\n  errorProps: PropTypes.object,\n  errorStyle: TextPropTypes.style,\n  errorMessage: PropTypes.string,\n  label: PropTypes.node,\n  labelStyle: TextPropTypes.style,\n  labelProps: PropTypes.object,\n  theme: PropTypes.object,\n};\n\nconst styles = {\n  container: {\n    width: '100%',\n    paddingHorizontal: 10,\n  },\n  inputContainer: theme => ({\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    alignItems: 'center',\n    borderColor: theme.colors.grey3,\n  }),\n  iconContainer: {\n    height: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginLeft: 15,\n  },\n  input: {\n    alignSelf: 'center',\n    color: 'black',\n    fontSize: 18,\n    flex: 1,\n    minHeight: 40,\n  },\n  error: theme => ({\n    margin: 5,\n    fontSize: 12,\n    color: theme.colors.error,\n  }),\n  label: theme => ({\n    fontSize: 16,\n    color: theme.colors.grey3,\n    ...Platform.select({\n      android: {\n        ...fonts.android.bold,\n      },\n      default: {\n        fontWeight: 'bold',\n      },\n    }),\n  }),\n};\n\nexport { Input };\nexport default withTheme(Input, 'Input');\n"]},"metadata":{},"sourceType":"module"}