{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\development\\\\FindFood\\\\node_modules\\\\react-native-snap-carousel\\\\src\\\\parallaximage\\\\ParallaxImage.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport PropTypes from 'prop-types';\nimport styles from \"./ParallaxImage.style\";\n\nvar ParallaxImage = function (_Component) {\n  _inherits(ParallaxImage, _Component);\n\n  function ParallaxImage(props) {\n    var _this;\n\n    _classCallCheck(this, ParallaxImage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ParallaxImage).call(this, props));\n    _this.state = {\n      offset: 0,\n      width: 0,\n      height: 0,\n      status: 1,\n      animOpacity: new Animated.Value(0)\n    };\n    _this._onLoad = _this._onLoad.bind(_assertThisInitialized(_this));\n    _this._onError = _this._onError.bind(_assertThisInitialized(_this));\n    _this._measureLayout = _this._measureLayout.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ParallaxImage, [{\n    key: \"setNativeProps\",\n    value: function setNativeProps(nativeProps) {\n      this._container.setNativeProps(nativeProps);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this._mounted = true;\n      setTimeout(function () {\n        _this2._measureLayout();\n      }, 0);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._mounted = false;\n    }\n  }, {\n    key: \"_measureLayout\",\n    value: function _measureLayout() {\n      var _this3 = this;\n\n      if (this._container) {\n        var _this$props = this.props,\n            dimensions = _this$props.dimensions,\n            vertical = _this$props.vertical,\n            carouselRef = _this$props.carouselRef,\n            sliderWidth = _this$props.sliderWidth,\n            sliderHeight = _this$props.sliderHeight,\n            itemWidth = _this$props.itemWidth,\n            itemHeight = _this$props.itemHeight;\n\n        if (carouselRef) {\n          this._container.measureLayout(findNodeHandle(carouselRef), function (x, y, width, height, pageX, pageY) {\n            var offset = vertical ? y - (sliderHeight - itemHeight) / 2 : x - (sliderWidth - itemWidth) / 2;\n\n            _this3.setState({\n              offset: offset,\n              width: dimensions && dimensions.width ? dimensions.width : Math.ceil(width),\n              height: dimensions && dimensions.height ? dimensions.height : Math.ceil(height)\n            });\n          });\n        }\n      }\n    }\n  }, {\n    key: \"_onLoad\",\n    value: function _onLoad(event) {\n      var _this4 = this;\n\n      var animOpacity = this.state.animOpacity;\n      var _this$props2 = this.props,\n          fadeDuration = _this$props2.fadeDuration,\n          onLoad = _this$props2.onLoad;\n\n      if (!this._mounted) {\n        return;\n      }\n\n      this.setState({\n        status: 2\n      });\n\n      if (onLoad) {\n        onLoad(event);\n      }\n\n      Animated.timing(animOpacity, {\n        toValue: 1,\n        duration: fadeDuration,\n        easing: Easing.out(Easing.quad),\n        isInteraction: false,\n        useNativeDriver: true\n      }).start(function () {\n        _this4.setState({\n          status: 3\n        });\n      });\n    }\n  }, {\n    key: \"_onError\",\n    value: function _onError(event) {\n      var onError = this.props.onError;\n      this.setState({\n        status: 4\n      });\n\n      if (onError) {\n        onError(event);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var containerStyle = this.props.containerStyle;\n      return React.createElement(View, {\n        ref: function ref(c) {\n          _this5._container = c;\n        },\n        pointerEvents: 'none',\n        style: [containerStyle, styles.container],\n        onLayout: this._measureLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        }\n      }, this.image, this.spinner);\n    }\n  }, {\n    key: \"image\",\n    get: function get() {\n      var _this$state = this.state,\n          status = _this$state.status,\n          animOpacity = _this$state.animOpacity,\n          offset = _this$state.offset,\n          width = _this$state.width,\n          height = _this$state.height;\n\n      var _this$props3 = this.props,\n          scrollPosition = _this$props3.scrollPosition,\n          dimensions = _this$props3.dimensions,\n          vertical = _this$props3.vertical,\n          sliderWidth = _this$props3.sliderWidth,\n          sliderHeight = _this$props3.sliderHeight,\n          parallaxFactor = _this$props3.parallaxFactor,\n          style = _this$props3.style,\n          other = _objectWithoutProperties(_this$props3, [\"scrollPosition\", \"dimensions\", \"vertical\", \"sliderWidth\", \"sliderHeight\", \"parallaxFactor\", \"style\"]);\n\n      var parallaxPadding = (vertical ? height : width) * parallaxFactor;\n      var requiredStyles = {\n        position: 'relative'\n      };\n      var dynamicStyles = {\n        width: vertical ? width : width + parallaxPadding * 2,\n        height: vertical ? height + parallaxPadding * 2 : height,\n        opacity: animOpacity,\n        transform: scrollPosition ? [{\n          translateX: !vertical ? scrollPosition.interpolate({\n            inputRange: [offset - sliderWidth, offset + sliderWidth],\n            outputRange: [-parallaxPadding, parallaxPadding],\n            extrapolate: 'clamp'\n          }) : 0\n        }, {\n          translateY: vertical ? scrollPosition.interpolate({\n            inputRange: [offset - sliderHeight, offset + sliderHeight],\n            outputRange: [-parallaxPadding, parallaxPadding],\n            extrapolate: 'clamp'\n          }) : 0\n        }] : []\n      };\n      return React.createElement(Animated.Image, _extends({}, other, {\n        style: [styles.image, style, requiredStyles, dynamicStyles],\n        onLoad: this._onLoad,\n        onError: status !== 3 ? this._onError : undefined,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        }\n      }));\n    }\n  }, {\n    key: \"spinner\",\n    get: function get() {\n      var status = this.state.status;\n      var _this$props4 = this.props,\n          showSpinner = _this$props4.showSpinner,\n          spinnerColor = _this$props4.spinnerColor;\n      return status === 1 && showSpinner ? React.createElement(View, {\n        style: styles.loaderContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        }\n      }, React.createElement(ActivityIndicator, {\n        size: 'small',\n        color: spinnerColor,\n        animating: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        }\n      })) : false;\n    }\n  }]);\n\n  return ParallaxImage;\n}(Component);\n\nParallaxImage.propTypes = _objectSpread({}, Image.propTypes, {\n  carouselRef: PropTypes.object,\n  itemHeight: PropTypes.number,\n  itemWidth: PropTypes.number,\n  scrollPosition: PropTypes.object,\n  sliderHeight: PropTypes.number,\n  sliderWidth: PropTypes.number,\n  vertical: PropTypes.bool,\n  containerStyle: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\n  dimensions: PropTypes.shape({\n    width: PropTypes.number,\n    height: PropTypes.number\n  }),\n  fadeDuration: PropTypes.number,\n  parallaxFactor: PropTypes.number,\n  showSpinner: PropTypes.bool,\n  spinnerColor: PropTypes.string\n});\nParallaxImage.defaultProps = {\n  containerStyle: {},\n  fadeDuration: 500,\n  parallaxFactor: 0.3,\n  showSpinner: true,\n  spinnerColor: 'rgba(0, 0, 0, 0.4)'\n};\nexport { ParallaxImage as default };","map":{"version":3,"sources":["C:/development/FindFood/node_modules/react-native-snap-carousel/src/parallaximage/ParallaxImage.js"],"names":["React","Component","PropTypes","styles","ParallaxImage","props","state","offset","width","height","status","animOpacity","Animated","Value","_onLoad","bind","_onError","_measureLayout","nativeProps","_container","setNativeProps","_mounted","setTimeout","dimensions","vertical","carouselRef","sliderWidth","sliderHeight","itemWidth","itemHeight","measureLayout","findNodeHandle","x","y","pageX","pageY","setState","Math","ceil","event","fadeDuration","onLoad","timing","toValue","duration","easing","Easing","out","quad","isInteraction","useNativeDriver","start","onError","containerStyle","c","container","image","spinner","scrollPosition","parallaxFactor","style","other","parallaxPadding","requiredStyles","position","dynamicStyles","opacity","transform","translateX","interpolate","inputRange","outputRange","extrapolate","translateY","undefined","showSpinner","spinnerColor","loaderContainer","propTypes","Image","object","number","bool","ViewPropTypes","View","shape","string","defaultProps"],"mappings":"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","sourcesContent":["// Parallax effect inspired by https://github.com/oblador/react-native-parallax/\n\nimport React, { Component } from 'react';\nimport { View, ViewPropTypes, Image, Animated, Easing, ActivityIndicator, findNodeHandle } from 'react-native';\nimport PropTypes from 'prop-types';\nimport styles from './ParallaxImage.style';\n\nexport default class ParallaxImage extends Component {\n\n    static propTypes = {\n        ...Image.propTypes,\n        carouselRef: PropTypes.object, // passed from <Carousel />\n        itemHeight: PropTypes.number, // passed from <Carousel />\n        itemWidth: PropTypes.number, // passed from <Carousel />\n        scrollPosition: PropTypes.object, // passed from <Carousel />\n        sliderHeight: PropTypes.number, // passed from <Carousel />\n        sliderWidth: PropTypes.number, // passed from <Carousel />\n        vertical: PropTypes.bool, // passed from <Carousel />\n        containerStyle: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\n        dimensions: PropTypes.shape({\n            width: PropTypes.number,\n            height: PropTypes.number\n        }),\n        fadeDuration: PropTypes.number,\n        parallaxFactor: PropTypes.number,\n        showSpinner: PropTypes.bool,\n        spinnerColor: PropTypes.string\n    };\n\n    static defaultProps = {\n        containerStyle: {},\n        fadeDuration: 500,\n        parallaxFactor: 0.3,\n        showSpinner: true,\n        spinnerColor: 'rgba(0, 0, 0, 0.4)'\n    }\n\n    constructor (props) {\n        super(props);\n        this.state = {\n            offset: 0,\n            width: 0,\n            height: 0,\n            status: 1, // 1 -> loading; 2 -> loaded // 3 -> transition finished; 4 -> error\n            animOpacity: new Animated.Value(0)\n        };\n        this._onLoad = this._onLoad.bind(this);\n        this._onError = this._onError.bind(this);\n        this._measureLayout = this._measureLayout.bind(this);\n    }\n\n    setNativeProps (nativeProps) {\n        this._container.setNativeProps(nativeProps);\n    }\n\n    componentDidMount () {\n        this._mounted = true;\n\n        setTimeout(() => {\n            this._measureLayout();\n        }, 0);\n    }\n\n    componentWillUnmount () {\n        this._mounted = false;\n    }\n\n    _measureLayout () {\n        if (this._container) {\n            const {\n                dimensions,\n                vertical,\n                carouselRef,\n                sliderWidth,\n                sliderHeight,\n                itemWidth,\n                itemHeight\n            } = this.props;\n\n            if (carouselRef) {\n                this._container.measureLayout(\n                    findNodeHandle(carouselRef),\n                    (x, y, width, height, pageX, pageY) => {\n                        const offset = vertical ?\n                            y - ((sliderHeight - itemHeight) / 2) :\n                            x - ((sliderWidth - itemWidth) / 2);\n\n                        this.setState({\n                            offset: offset,\n                            width: dimensions && dimensions.width ?\n                                dimensions.width :\n                                Math.ceil(width),\n                            height: dimensions && dimensions.height ?\n                                dimensions.height :\n                                Math.ceil(height)\n                        });\n                    }\n                );\n            }\n        }\n    }\n\n    _onLoad (event) {\n        const { animOpacity } = this.state;\n        const { fadeDuration, onLoad } = this.props;\n\n        if (!this._mounted) {\n            return;\n        }\n\n        this.setState({ status: 2 });\n\n        if (onLoad) {\n            onLoad(event);\n        }\n\n        Animated.timing(animOpacity, {\n            toValue: 1,\n            duration: fadeDuration,\n            easing: Easing.out(Easing.quad),\n            isInteraction: false,\n            useNativeDriver: true\n        }).start(() => {\n            this.setState({ status: 3 });\n        });\n    }\n\n    // If arg is missing from method signature, it just won't be called\n    _onError (event) {\n        const { onError } = this.props;\n\n        this.setState({ status: 4 });\n\n        if (onError) {\n            onError(event);\n        }\n    }\n\n    get image () {\n        const { status, animOpacity, offset, width, height } = this.state;\n        const {\n            scrollPosition,\n            dimensions,\n            vertical,\n            sliderWidth,\n            sliderHeight,\n            parallaxFactor,\n            style,\n            ...other\n        } = this.props;\n\n        const parallaxPadding = (vertical ? height : width) * parallaxFactor;\n        const requiredStyles = { position: 'relative' };\n        const dynamicStyles = {\n            width: vertical ? width : width + parallaxPadding * 2,\n            height: vertical ? height + parallaxPadding * 2 : height,\n            opacity: animOpacity,\n            transform: scrollPosition ? [\n                {\n                    translateX: !vertical ? scrollPosition.interpolate({\n                        inputRange: [offset - sliderWidth, offset + sliderWidth],\n                        outputRange: [-parallaxPadding, parallaxPadding],\n                        extrapolate: 'clamp'\n                    }) : 0\n                },\n                {\n                    translateY: vertical ? scrollPosition.interpolate({\n                        inputRange: [offset - sliderHeight, offset + sliderHeight],\n                        outputRange: [-parallaxPadding, parallaxPadding],\n                        extrapolate: 'clamp'\n                    }) : 0\n                }\n            ] : []\n        };\n\n        return (\n            <Animated.Image\n              {...other}\n              style={[styles.image, style, requiredStyles, dynamicStyles]}\n              onLoad={this._onLoad}\n              onError={status !== 3 ? this._onError : undefined} // prevent infinite-loop bug\n            />\n        );\n    }\n\n    get spinner () {\n        const { status } = this.state;\n        const { showSpinner, spinnerColor } = this.props;\n\n        return status === 1 && showSpinner ? (\n            <View style={styles.loaderContainer}>\n                <ActivityIndicator\n                  size={'small'}\n                  color={spinnerColor}\n                  animating={true}\n                />\n            </View>\n        ) : false;\n    }\n\n    render () {\n        const { containerStyle } = this.props;\n\n        return (\n            <View\n              ref={(c) => { this._container = c; }}\n              pointerEvents={'none'}\n              style={[containerStyle, styles.container]}\n              onLayout={this._measureLayout}\n            >\n                { this.image }\n                { this.spinner }\n            </View>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}