{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\development\\\\FindFood\\\\src\\\\screens\\\\RecipesList\\\\RecipesListScreen.js\";\nimport React from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport styles from \"./styles\";\nimport { getRecipes, getCategoryName } from \"../../data/MockDataAPI\";\n\nvar RecipesListScreen = function (_React$Component) {\n  _inherits(RecipesListScreen, _React$Component);\n\n  function RecipesListScreen(props) {\n    var _this;\n\n    _classCallCheck(this, RecipesListScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RecipesListScreen).call(this, props));\n\n    _this.onPressRecipe = function (item) {\n      _this.props.navigation.navigate('Recipe', {\n        item: item\n      });\n    };\n\n    _this.renderRecipes = function (_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableHighlight, {\n        underlayColor: \"rgba(73,182,77,0.9)\",\n        onPress: function onPress() {\n          return _this.onPressRecipe(item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        }\n      }, React.createElement(Image, {\n        style: styles.photo,\n        source: {\n          uri: item.photo_url\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        }\n      }), React.createElement(Text, {\n        style: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        }\n      }, item.title), React.createElement(Text, {\n        style: styles.category,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        }\n      }, getCategoryName(item.categoryId))));\n    };\n\n    return _this;\n  }\n\n  _createClass(RecipesListScreen, [{\n    key: \"render\",\n    value: function render() {\n      var navigation = this.props.navigation;\n      var item = navigation.getParam('category');\n      var recipesArray = getRecipes(item.strCategory);\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        }\n      }, React.createElement(FlatList, {\n        vertical: true,\n        showsVerticalScrollIndicator: false,\n        numColumns: 2,\n        data: recipesArray,\n        renderItem: this.renderRecipes,\n        keyExtractor: function keyExtractor(item) {\n          return \"\" + item.strCategory;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        }\n      }));\n    }\n  }]);\n\n  return RecipesListScreen;\n}(React.Component);\n\nRecipesListScreen.navigationOptions = function (_ref2) {\n  var navigation = _ref2.navigation;\n  return {\n    title: navigation.getParam('title')\n  };\n};\n\nexport { RecipesListScreen as default };","map":{"version":3,"sources":["C:/development/FindFood/src/screens/RecipesList/RecipesListScreen.js"],"names":["React","styles","getRecipes","getCategoryName","RecipesListScreen","props","onPressRecipe","item","navigation","navigate","renderRecipes","container","photo","uri","photo_url","title","category","categoryId","getParam","recipesArray","strCategory","Component","navigationOptions"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAQA,OAAOC,MAAP;AACA,SAASC,UAAT,EAAqBC,eAArB;;IAEqBC,iB;;;AAOnB,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,2FAAMA,KAAN;;AADiB,UAInBC,aAJmB,GAIH,UAAAC,IAAI,EAAI;AACtB,YAAKF,KAAL,CAAWG,UAAX,CAAsBC,QAAtB,CAA+B,QAA/B,EAAyC;AAAEF,QAAAA,IAAI,EAAJA;AAAF,OAAzC;AACD,KANkB;;AAAA,UAQnBG,aARmB,GAQH;AAAA,UAAGH,IAAH,QAAGA,IAAH;AAAA,aACd,oBAAC,kBAAD;AAAoB,QAAA,aAAa,EAAC,qBAAlC;AAAwD,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAKD,aAAL,CAAmBC,IAAnB,CAAN;AAAA,SAAjE;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEN,MAAM,CAACU,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEV,MAAM,CAACW,KAArB;AAA4B,QAAA,MAAM,EAAE;AAAEC,UAAAA,GAAG,EAAEN,IAAI,CAACO;AAAZ,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEb,MAAM,CAACc,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4BR,IAAI,CAACQ,KAAjC,CAFF,EAGE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEd,MAAM,CAACe,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+Bb,eAAe,CAACI,IAAI,CAACU,UAAN,CAA9C,CAHF,CADF,CADc;AAAA,KARG;;AAAA;AAElB;;;;6BAgBQ;AAAA,UACCT,UADD,GACgB,KAAKH,KADrB,CACCG,UADD;AAEP,UAAMD,IAAI,GAAGC,UAAU,CAACU,QAAX,CAAoB,UAApB,CAAb;AACA,UAAMC,YAAY,GAAGjB,UAAU,CAACK,IAAI,CAACa,WAAN,CAA/B;AACA,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,QAAQ,MADV;AAEE,QAAA,4BAA4B,EAAE,KAFhC;AAGE,QAAA,UAAU,EAAE,CAHd;AAIE,QAAA,IAAI,EAAED,YAJR;AAKE,QAAA,UAAU,EAAE,KAAKT,aALnB;AAME,QAAA,YAAY,EAAE,sBAAAH,IAAI;AAAA,sBAAOA,IAAI,CAACa,WAAZ;AAAA,SANpB;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAYD;;;;EAzC4CpB,KAAK,CAACqB,S;;AAAhCjB,iB,CACZkB,iB,GAAoB,iBAAoB;AAAA,MAAjBd,UAAiB,SAAjBA,UAAiB;AAC7C,SAAO;AACLO,IAAAA,KAAK,EAAEP,UAAU,CAACU,QAAX,CAAoB,OAApB;AADF,GAAP;AAGD,C;;SALkBd,iB","sourcesContent":["import React from 'react';\nimport {\n  FlatList,\n  Text,\n  View,\n  TouchableHighlight,\n  Image\n} from 'react-native';\nimport styles from './styles';\nimport { getRecipes, getCategoryName } from '../../data/MockDataAPI';\n\nexport default class RecipesListScreen extends React.Component {\n  static navigationOptions = ({ navigation }) => {\n    return {\n      title: navigation.getParam('title')\n    };\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPressRecipe = item => {\n    this.props.navigation.navigate('Recipe', { item });\n  };\n\n  renderRecipes = ({ item }) => (\n    <TouchableHighlight underlayColor='rgba(73,182,77,0.9)' onPress={() => this.onPressRecipe(item)}>\n      <View style={styles.container}>\n        <Image style={styles.photo} source={{ uri: item.photo_url }} />\n        <Text style={styles.title}>{item.title}</Text>\n        <Text style={styles.category}>{getCategoryName(item.categoryId)}</Text>\n      </View>\n    </TouchableHighlight>\n  );\n\n  render() {\n    const { navigation } = this.props;\n    const item = navigation.getParam('category');\n    const recipesArray = getRecipes(item.strCategory);\n    return (\n      <View>\n        <FlatList\n          vertical\n          showsVerticalScrollIndicator={false}\n          numColumns={2}\n          data={recipesArray}\n          renderItem={this.renderRecipes}\n          keyExtractor={item => `${item.strCategory}`}\n        />\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}